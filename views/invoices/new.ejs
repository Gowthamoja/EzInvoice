<% layout('/layouts/boilerplate') %>

    <div class="container my-4">
        <form method="POST" action="/invoices" class="needs-validation" novalidate>

            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3 class="fw-bold">Create Invoice</h3>
                <button type="submit" class="btn btn-primary px-4 shadow-sm">Save Invoice</button>
            </div>
            <div class="card p-4 shadow-sm">
                <div class="card-body">
                    <div class="card p-4 mb-4 shadow-sm border-0">
                        <div class="row">

                            <div class="col-md-4 mb-3">
                                <label for="invoiceNumber" class="form-label small text-uppercase text-muted">Invoice
                                    Number</label>
                                <input type="text" id="invoiceNumber" name="invoice[invoiceNumber]" class="form-control"
                                    placeholder="INV-0001" required>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="invoiceDate" class="form-label small text-uppercase text-muted">Invoice
                                    Date</label>
                                <input type="date" id="invoiceDate" name="invoice[invoiceDate]" class="form-control"
                                    required>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="dueDate" class="form-label small text-uppercase text-muted">Due Date</label>
                                <input type="date" id="dueDate" name="invoice[dueDate]" class="form-control" required>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6 mb-3">
                            <div class="card p-4 h-100 shadow-sm border-0">
                                <h5 class="card-title mb-3">Bill From</h5>

                                <label for="businessName" class="form-label small">Business Name</label>
                                <input type="text" id="businessName" name="invoice[billFrom][businessName]"
                                    class="form-control mb-3" required>

                                <label for="businessEmail" class="form-label small">Email</label>
                                <input type="email" id="businessEmail" name="invoice[billFrom][email]"
                                    class="form-control mb-3" required>

                                <label for="businessAddress" class="form-label small">Address</label>
                                <textarea id="businessAddress" name="invoice[billFrom][address]"
                                    class="form-control mb-3" rows="3" required></textarea>

                                <label for="phoneNumber" class="form-label small">Phone</label>
                                <input type="tel" id="phoneNumber" name="invoice[billFrom][phone]" class="form-control"
                                    required>
                            </div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <div class="card p-4 h-100 shadow-sm border-0">
                                <h5 class="card-title mb-3">Bill To</h5>

                                <label for="clientName" class="form-label small">Client Name</label>
                                <input type="text" id="clientName" name="invoice[billTo][clientName]"
                                    class="form-control mb-3" required>

                                <label for="clientEmail" class="form-label small">Client Email</label>
                                <input type="email" id="clientEmail" name="invoice[billTo][email]"
                                    class="form-control mb-3" required>

                                <label for="clientAddress" class="form-label small">Client Address</label>
                                <textarea id="clientAddress" name="invoice[billTo][address]" class="form-control mb-3"
                                    rows="3" required></textarea>

                                <label for="phoneNumberClient" class="form-label small">Client Phone</label>
                                <input type="tel" id="phoneNumberClient" name="invoice[billTo][phone]"
                                    class="form-control" required>
                            </div>
                        </div>
                    </div>

                    <div class="card p-4 mb-4 shadow-sm border-0">
                        <h5 class="card-title mb-4">Items</h5>

                        <div class="row g-3 fw-bold text-uppercase small text-muted border-bottom pb-2">
                            <div class="col-5">Item</div>
                            <div class="col-1 text-end">Qty</div>
                            <div class="col-2 text-end">Price</div>
                            <div class="col-1 text-end">Tax (%)</div>
                            <div class="col-2 text-end">Total</div>
                            <div class="col-1"></div>
                        </div>

                        <div id="items-container" class="mt-3"></div>

                        <button type="button" id="addItemBtn"
                            class="btn btn-link text-decoration-none text-primary fw-bold p-0 mt-3 align-self-start">
                            <i class="fa fa-plus"></i> Add Item
                        </button>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <div class="card p-4 h-100 shadow-sm border-0">
                                <h5 class="card-title mb-3">Notes & Terms</h5>

                                <label for="notes" class="form-label small">Notes</label>
                                <textarea id="notes" name="invoice[notes]" class="form-control mb-3"
                                    rows="3"></textarea>

                                <label for="terms" class="form-label small">Payment Terms</label>
                                <input type="text" id="terms" name="invoice[paymentTerms]" class="form-control mb-3">

                                <label for="status" class="form-label small">Status</label>
                                <select id="status" name="invoice[status]" class="form-select">
                                    <option value="unpaid">Unpaid</option>
                                    <option value="paid">Paid</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-md-6 mb-3">
                            <div class="card p-4 h-100 shadow-sm border-0 d-flex flex-column justify-content-end">

                                <div class="d-flex justify-content-between mb-2">
                                    <span>Subtotal:</span>
                                    <input type="text" id="subtotal" name="invoice[subtotal]" readonly value="0.00"
                                        class="form-control-plaintext text-end fw-bold p-0 w-auto">
                                </div>

                                <div class="d-flex justify-content-between mb-2">
                                    <span>Tax:</span>
                                    <input type="text" id="taxtotal" name="invoice[taxTotal]" readonly value="0.00"
                                        class="form-control-plaintext text-end fw-bold p-0 w-auto">
                                </div>

                                <div class="d-flex justify-content-between pt-3 border-top">
                                    <span class="fs-4 fw-bolder">Total:</span>
                                    <input type="text" id="total" name="invoice[total]" readonly value="0.00"
                                        class="form-control-plaintext text-end fs-4 fw-bolder text-primary p-0 w-auto">
                                </div>

                            </div>
                        </div>
                    </div>
                    </div>
                    </div>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const container = document.getElementById('items-container');
            const addButton = document.getElementById('addItemBtn');
            let itemCounter = 0;

            const subtotalInput = document.getElementById('subtotal');
            const taxTotalInput = document.getElementById('taxtotal');
            const totalInput = document.getElementById('total');

            function reIndexRows() {
                let index = 0;
                document.querySelectorAll('#items-container .row.item-row').forEach(row => {
                    row.querySelectorAll('input').forEach(input => {
                        if (input.name && input.name.includes('[items]')) {
                            input.name = input.name.replace(/\[items\]\[\d*\]/, `[items][${index}]`);
                        }
                    });
                    index++;
                });
            }

            function updateTotals() {
                let overallSubtotal = 0;
                let overallTaxTotal = 0;

                document.querySelectorAll('#items-container .row.item-row').forEach(row => {
                    const qtyInput = row.querySelector('[data-calc="quantity"]');
                    const priceInput = row.querySelector('[data-calc="price"]');
                    const taxInput = row.querySelector('[data-calc="tax"]');
                    const itemTotalInput = row.querySelector('[data-calc="itemTotal"]');

                    const qty = parseFloat(qtyInput.value) || 0;
                    const price = parseFloat(priceInput.value) || 0;
                    const taxPercent = parseFloat(taxInput.value) || 0;

                    const itemSubtotal = qty * price;
                    const itemTax = itemSubtotal * (taxPercent / 100);
                    const itemTotal = itemSubtotal + itemTax;

                    itemTotalInput.value = itemTotal.toFixed(2);

                    overallSubtotal += itemSubtotal;
                    overallTaxTotal += itemTax;
                });

                const overallTotal = overallSubtotal + overallTaxTotal;

                subtotalInput.value = overallSubtotal.toFixed(2);
                taxTotalInput.value = overallTaxTotal.toFixed(2);
                totalInput.value = overallTotal.toFixed(2);
            }

            function updateRemoveButtons() {
                const rows = container.querySelectorAll('.item-row');
                rows.forEach(btnRow => {
                    const removeBtn = btnRow.querySelector('.remove-item-btn');
                    if (rows.length === 1) {
                        removeBtn.style.display = "none";
                    } else {
                        removeBtn.style.display = "inline-block";
                    }
                });
            }

            function createNewItemRow() {
                itemCounter++;
                const rowId = `item-${itemCounter}`;

                const newItemHTML = `
            <div class="row g-3 item-row border-bottom pb-3 mb-3" id="${rowId}">
                <div class="col-5">
                    <input type="text" name="invoice[items][][name]" class="form-control" placeholder="Item Name" required>
                </div>
                <div class="col-1">
                    <input type="number" name="invoice[items][][quantity]" data-calc="quantity" class="form-control text-end" required value="1" min="1">
                </div>
                <div class="col-2">
                    <input type="number" name="invoice[items][][unitPrice]" data-calc="price" class="form-control text-end" required min="0">
                </div>
                <div class="col-1">
                    <input type="number" name="invoice[items][][taxPercent]" data-calc="tax" class="form-control text-end" required value="0" min="0">
                </div>
                <div class="col-2">
                    <input type="text" name="invoice[items][][total]" data-calc="itemTotal" class="form-control-plaintext text-end fw-bold" readonly value="0.00">
                </div>
                <div class="col-1 d-flex align-items-center">
                    <button type="button" class="btn text-danger remove-item-btn p-0 ms-auto">
                        <i class="fa fa-trash"></i>
                    </button>
                </div>
            </div>
        `;

                container.insertAdjacentHTML('beforeend', newItemHTML);

                const newRow = document.getElementById(rowId);
                const removeBtn = newRow.querySelector('.remove-item-btn');

                newRow.querySelectorAll('input[type="number"]').forEach(input => {
                    input.addEventListener('input', updateTotals);
                });

                removeBtn.addEventListener('click', function () {
                    newRow.remove();
                    reIndexRows();
                    updateTotals();
                    updateRemoveButtons();
                });

                reIndexRows();
                updateTotals();
                updateRemoveButtons();
                if(itemCounter != 1) {  
                newRow.querySelector('input[type="text"]').focus();
                }
            }

            addButton.addEventListener('click', createNewItemRow);

            // On load: create 1 row
            createNewItemRow();
        });
    </script>

    <style>
    .edit, .shows {
        display: none;
    }
    .new {
        color: white;
        background-color: #0D6EFD;
        /* text-decoration: underline; */
    }
    .link {
        transition: background-color 0.3s, color 0.3s;
    }
    .link:hover {
        background-color: #0D6EFD;
        color: white;

    }
</style>